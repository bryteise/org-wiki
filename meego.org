* Meego Dev
** Fresh install
*** extra utils
zypper install the following:
git osc openssh-server zsh emacs mic2 man man-pages gcc binutils make
spectacle gettext curl-devel libnotify-devel valgrind ctags nc
libtool vala libcap-devel docbook-xsl xsltproc automake autoconf
** Reading list
http://conference2010.meego.com/sites/all/files/sessions/meego_learning_from_mistakes.pdf
http://meego.com/about/compliance-program
http://wiki.meego.com/Quality/Compliance
http://meego.com/search/node/compliance
** Getting Meego image creator setup
follow instructions here:
http://wiki.meego.com/Image_Creation#Requirements
Using
sudo mic-image-creator --config=meego.ks --format=livecd --cache=mycache
to create the image but having issues with hd running out of space
since it is caching things on the primary hd.
Attempted to update the ks file to use a different caching directory
but found it would still fail to build referencing a temp directory in
var it wanted to use but couldn't find.
Moved to working on KVM and was able to build after allocating enough
space for the drive.
Trying to install the image on a VM in KVM was unsuccessful.  Need to
look into meego on KVM.
** Bugzilla
http://bugs.meego.com
deskzilla works with this repo nicely, thanks Ryan
** Git repo
http://meego.gitorious.org

** rpm stuff
*** hacking on src rpms and extracting their innards
> I have Meego 1.1 on a netbook and with kernel 2.6.35.3.10.3-netbook.
> I need to re-compile the kernel to turn on deadline IO.   Via zypper, I
> installed kernel-netbook and kernel-netbook-devel.   kernel-headers are
> already installed.
>
No, you need to:
 $ sudo zypper si kernel-netbook
Then the .src.rpm will be in $HOME/rpmbuild/SRPMS/
To unpack the .src.rpm to a folder so that you can change the config,
you'll need to do something like:

 $ mkdir sandbox/
 $ cd sandbox/
 $ rpm2cpio /path/to/kernel.src.rpm | cpio -id --no-absolute-filenames

This will unpack all the patches, .spec files, and tarballs into the
current directory.

From here, what you want to do depends on whether or not you want to
package your work.  My suggestion is to:

 1. Unpack the tarball.
 2. Patch the tarball using quilt
 3. Borrow the config file from a kernel that's close.
 4. make menuconfig
 5. make && make modules_install && make install
 6. If !satisfied GOTO 4

After that, you can worry about creating an RPM.
